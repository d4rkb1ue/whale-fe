{"version":3,"sources":["constants/config.js","api/get.js","actions/ApiActions.js","components/Table.js","utils/index.js","components/Chart.js","components/Charts.js","components/FilterTag.js","components/FilterTags.js","components/SearchBar.js","containers/App.js","actions/FilterActions.js","reducers/offers.js","reducers/filters.js","dataStructure/Filter.js","reducers/index.js","serviceWorker.js","index.js"],"names":["OFFER_HEADER_CHOICES","season","key","value","text","OFFER_HEADER","Header","accessor","GENERAL_PARA","offset","limit","list_id","EMPTY_QUERY","NaN","annual_refresh","level","year","base_salary","relocation_fee","sign_bonus","post_title","satisfaction","area","degree","equity","equity_schedule","experience","experience_level","greencard","group","job_function","job_type","title","interest_point","other_offer","position_type","post_time","spider_time","promotion_package","url","yearly_bonus","apply_source","getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","res","data","wrap","_context","prev","next","axios","get","API","sent","offers","abrupt","stop","this","_x","apply","arguments","loadingOffers","taskCount","type","getDemoOffers","dispatch","length","undefined","requestOffers","obj","console","error","Number","isNaN","substring","makeQuery","objectSpread","Table","renderCustomCell","idx","findIndex","val","customURL","_this","Cell","u","react_default","createElement","Button","fluid","icon","size","onClick","window","open","maxWidth","customSeason","choice","month2season","find","s","filterMethod","filter","row","id","toLowerCase","String","indexOf","_this$props","props","loading","react_table_es","columns","isLoading","defaultPageSize","showPageSizeOptions","className","Component","offerCountBy","para","sortFunc","counter","forEach","o","p","arr","c","_arr$push","push","defineProperty","sort","labels","map","counts","count","THIS_YEAR","Date","getFullYear","START_YEAR","END_YEAR","Chart","color","header","chart","GridColumn","Card","Content","defaults","global","legend","display","Charts","makeData","datas","datasets","charts","_getOfferCountByCompa","b","getOfferCountByCompany","react_chartjs_2_es","getDatasetAtEvent","d","log","_getOfferCountByYear","recent","i","l","_","getOfferCountByYear","redraw","com","Chart_Chart","assign","ICON","company_name","sign_bonus_string","SHOW_LABEL","FilterTag","Label","Icon","name","Detail","FilterTags","filters","deleteFilter","FilterTag_FilterTag","SearchBar","Menu","Item","Input","placeholder","App","getAllOffers","Container","Divider","hidden","SearchBar_SearchBar","FilterTags_FilterTags","Charts_Charts","Table_Table","connect","state","offer","_filters$i","getFilteredOffers","removeFilter","INITIAL_STATE","Filter","classCallCheck","Math","random","toString","substr","combineReducers","action","toConsumableArray","concat","f","Boolean","location","hostname","match","store","createStore","reducer","applyMiddleware","thunk","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c13f5b4.chunk.js","sourcesContent":["export const API = 'http://whaleapi.drkbl.com/api/v1/'\nexport const OFFER_API = API + '/offers'\nexport const DEFAULT_OFFER_PAGESIZE = 20\nexport const OFFER_HEADER_CHOICES = {\n    'season': [\n        { key: '1-3', value: '1-3', text: 'Spring' },\n        { key: '4-6', value: '4-6', text: 'Summer' },\n        { key: '7-9', value: '7-9', text: 'Fall' },\n        { key: '10-12', value: '10-12', text: 'Winter' },\n    ]\n}\nexport const SHOW_YEAR_BEFORE = 3\nexport const SHOW_YEAR_LATER = 1\nexport const OFFER_HEADER = [\n    {\n        Header: 'Company',\n        accessor: 'company_name',\n    },\n    {\n        Header: 'Base',\n        accessor: 'base_salary',\n    },\n    {\n        Header: 'Equity',\n        accessor: 'equity',\n    },\n    {\n        Header: 'SignBonus',\n        accessor: 'sign_bonus_string',\n    },\n    {\n        Header: 'YearlyBonus',\n        accessor: 'yearly_bonus',\n    },\n    {\n        Header: 'Degree',\n        accessor: 'degree',\n    },\n    /**\n     *  BayArea\n     *  Greater Seattle Area\n     *  Greater New York Area\n     *  Greater Boston Area\n     *  Texas\n     *  Southern California\n     *  Pittsburgh\n     *  Chicago\n     *  DC\n     *  美国其他地区\n     *  Canada\n     *  欧洲\n     *  澳大利亚\n     *  北京\n     *  上海\n     *  广州\n     *  成都\n     *  沈阳\n     *  国内其他地区\n     *  亚洲其他地区\n     *  South America\n     *  Everywhere else\n     */\n    {\n        Header: 'Area',\n        accessor: 'area',\n    },\n    {\n        Header: 'Experience',\n        accessor: 'experience_level',\n    },\n    // {\n    //     Header: 'experience',\n    //     accessor: 'experience',\n    // },\n    // {\n    //     Header: 'post_time',\n    //     accessor: 'post_time',\n    // },\n    {\n        Header: 'Year',\n        accessor: 'year',\n    },\n    {\n        Header: 'Season',\n        accessor: 'season',\n    },\n    {\n        Header: 'Link',\n        accessor: 'url',\n    },\n]\n\n\n","import axios from 'axios';\nimport { OFFER_API } from '../constants/config'\n\nconst GENERAL_PARA = {\n    offset: true,\n    limit: true,\n    list_id: true,\n}\n\nexport const EMPTY_QUERY = {\n    offset: NaN,\n    limit: NaN,\n    list_id: '',\n    annual_refresh: NaN,\n    level: NaN,\n    year: NaN,\n    base_salary: NaN,\n    relocation_fee: NaN,\n    sign_bonus: NaN,\n    post_title: '',\n    satisfaction: '',\n    area: '',\n    degree: '',\n    equity: '',\n    equity_schedule: '',\n    experience: '',\n    experience_level: '',\n    greencard: '',\n    group: '',\n    job_function: '',\n    job_type: '',\n    title: '',\n    interest_point: '',\n    other_offer: '',\n    position_type: '',\n    post_time: null,\n    spider_time: null,\n    promotion_package: '',\n    season: '',\n    url: '',\n    yearly_bonus: '',\n    apply_source: '',\n}\n\nexport const makeQuery = (obj) => {\n    if (!obj) { return '' }\n    let query = '?'\n    for (let key in obj) {\n        if (!(key in EMPTY_QUERY)) {\n            console.error('invalid arg', key)\n        }\n        if (Number.isNaN(obj[key]) || !obj[key]) {\n            continue\n        }\n        if (key in GENERAL_PARA) {\n            query += (key + '=' + obj[key])\n        } else {\n            query += ('by_' + key + '=' + obj[key])\n        }\n        query += '&'\n    }\n    if (query === '?') {\n        return ''\n    }\n\n    if (query[query.length - 1] === '&') {\n        query = query.substring(0, query.length - 1)\n    }\n    \n    return query\n}\n\n/**\n * usage:\n * makeQuery({\n *     ...EMPTY_QUERY,\n *     limit: 10,\n * })\n */\n\nexport const getData = async (query) => {\n    let res = await axios.get(OFFER_API + query)\n    let data = res.data && res.data.offers\n    return data || []\n}\n","import { getData, makeQuery, EMPTY_QUERY } from '../api/get';\n\nexport const RECEIVE_OFFERS = 'recieve_offers'\nexport const LOADING_OFFERS = 'loading_offers'\n\nexport const loadingOffers = (taskCount) => ({\n    type: LOADING_OFFERS,\n    taskCount\n})\n\nexport const receiveOffers = offers => ({\n    type: RECEIVE_OFFERS,\n    offers\n})\n\nconst requestOffers = (query = '', taskCount = 10) => async (dispatch) => {\n    dispatch(loadingOffers(taskCount))\n    const offers = await getData(query)\n    dispatch({\n        type: RECEIVE_OFFERS,\n        offers\n    })\n}\n\nconst DEMO_OFFER_COUNT = 3000\nexport const getDemoOffers = () => dispatch => {\n    return dispatch(requestOffers(makeQuery({\n        ...EMPTY_QUERY,\n        limit: DEMO_OFFER_COUNT,\n    }), DEMO_OFFER_COUNT))\n}\n","import React, { Component } from 'react'\nimport ReactTable from \"react-table\"\nimport { Button } from 'semantic-ui-react'\nimport \"react-table/react-table.css\"\nimport { OFFER_HEADER, OFFER_HEADER_CHOICES, DEFAULT_OFFER_PAGESIZE } from '../constants/config'\n\nexport default class Table extends Component {\n    // use arrow function to avoid scope problem without useing .bind()\n    renderCustomCell = (accessor, obj) => {\n        let idx = OFFER_HEADER.findIndex(val => val.accessor === accessor)\n        OFFER_HEADER[idx] = {\n            ...OFFER_HEADER[idx],\n            ...obj\n        }\n    }\n\n    customURL = () => {\n        // make url as button\n        const urlBotton = url => (\n            <Button\n                fluid\n                icon='world'\n                size='mini'\n                onClick={() => window.open(url, '_blank')} />\n        )\n        const URL_BUTTON_WIDTH = 50\n        this.renderCustomCell('url', {\n            Cell: u => urlBotton(u.value),\n            maxWidth: URL_BUTTON_WIDTH\n        })\n    }\n\n    customSeason = () => {\n        // translate month value '1-12' to spring/summer/fall/winter\n        const choice = OFFER_HEADER_CHOICES['season']\n        if (!choice) { return }\n        const month2season = (value) => {\n            if (!value) { return }\n            let res = choice.find(s => s.value === value)\n            return res && res.text\n        }\n\n        const filterMethod = (filter, row) => {\n            const accessor = filter.id\n            if (!row[accessor]) {\n                return false\n            }\n            const value = filter.value.toLowerCase()\n            return String(month2season(row[accessor])).toLowerCase().indexOf(value) > -1\n        }\n        this.renderCustomCell('season', {\n            Cell: ({ value }) => month2season(value),\n            filterMethod\n        })\n    }\n\n    render() {\n        const { offers, loading } = this.props\n        this.customURL()\n        this.customSeason()\n\n        return (\n            <ReactTable\n                data={offers}\n                columns={OFFER_HEADER}\n                loading={loading.isLoading}\n                defaultPageSize={DEFAULT_OFFER_PAGESIZE}\n                showPageSizeOptions={false}\n                className=\"-striped -highlight\"\n            />\n        )\n    }\n}\n","import { SHOW_YEAR_BEFORE, SHOW_YEAR_LATER } from '../constants/config'\nfunction offerCountBy (offers, para, sortFunc) {\n    let counter = {}\n    offers.forEach(o => {\n        let p = o[para]\n        if(!p) { return }\n        counter[p] = counter[p] || 0\n        counter[p]++\n    })\n    let arr = []\n    for (const c in counter) {\n        arr.push({\n            [para]: c,\n            count: counter[c]\n        })\n    }\n    if (sortFunc) {\n        arr.sort(sortFunc)\n    }\n    return {\n        labels: arr.map(obj => obj[para]),\n        counts: arr.map(obj => obj.count)\n    }\n}\n\nconst THIS_YEAR = (new Date()).getFullYear()\nconst START_YEAR = THIS_YEAR - SHOW_YEAR_BEFORE\nconst END_YEAR = THIS_YEAR + SHOW_YEAR_LATER\n\nexport function getOfferCountByYear(offers) {\n    let res = offerCountBy(offers, 'year', (a, b) => a.year - b.year)\n    // show only recent years\n    let recent = {}\n    for (let i = START_YEAR; i <= END_YEAR; i++) {\n        recent[i] = true\n    }\n    res = {\n        labels: res.labels.filter(l => recent[l]),\n        counts: res.counts.filter((_, idx) => recent[res.labels[idx]])\n    }\n    return res\n}\n\nexport function getOfferCountByCompany(offers) {\n    return offerCountBy(offers, 'company_name', (a, b) => b.count - a.count)\n}\n","import React, { Component } from 'react'\nimport { GridColumn, Card } from 'semantic-ui-react'\n\nexport default class Chart extends Component {\n    render() {\n        const { color, header, chart } = this.props\n        return (\n            <GridColumn>\n                <Card fluid color={color}>\n                    <Card.Content header={header} />\n                    {chart}\n                </Card>\n            </GridColumn>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\nimport { Line, Pie, defaults } from 'react-chartjs-2'\nimport { getOfferCountByYear, getOfferCountByCompany } from \"../utils\";\nimport Chart from './Chart'\n\ndefaults.global.legend.display = false\n// defaults.global.redraw = true\n\nexport default class Charts extends Component {\n    makeData = (labels, datas) => ({\n        labels,\n        datasets: datas.map(data => ({ data }))\n    })\n    render() {\n        const { offers } = this.props\n        const charts = []\n        let labels, counts, chart;\n\n        // make offer by company Pie chart\n        ({ labels, counts } = getOfferCountByCompany(offers));\n        chart = <Pie data={this.makeData(labels, [counts])} getDatasetAtEvent={(d) => console.log(d)}/>\n        charts.push({\n            color: 'blue',\n            header: 'Offer by Companies',\n            chart,\n        });\n\n        // make offer by year Line chart\n        ({ labels, counts } = getOfferCountByYear(offers));\n        // redraw is necessary for <Line /> to animate once loaded\n        chart = <Line data={this.makeData(labels, [counts])} redraw={true} />\n        charts.push({\n            color: 'red',\n            header: 'Offer by Year',\n            chart,\n        });\n\n        return (\n            <div className=\"ui three column doubling grid\">\n                {charts.map((com, idx) => (\n                    <Chart\n                        key={idx}\n                        {...com}\n                    />\n                ))}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Icon, Label } from 'semantic-ui-react'\n\nconst ICON = {\n    'company_name': 'briefcase',\n    'base_salary': 'dollar sign',\n    'equity': 'money bill alternate',\n    'sign_bonus_string': 'handshake',\n    'yearly_bonus': 'money bill alternate outline',\n    'degree': 'graduation cap',\n    'area': 'map marker',\n    'experience_level': 'trophy',\n    'year': 'calendar',\n    'season': 'calendar alternate outline',\n}\n\nconst SHOW_LABEL = {\n    'equity': 'Equity',\n    'sign_bonus_string': 'SignOn',\n    'yearly_bonus': 'Yearly',\n}\n\nexport default class FilterTag extends Component {\n    render() {\n        const { accessor, value, onClick } = this.props\n        return (\n            <Label>\n                <Icon name='delete' onClick={onClick} />\n                <Label.Detail>\n                    <Icon name={ICON[accessor] || 'circle outline'} />\n                    {SHOW_LABEL[accessor] && SHOW_LABEL[accessor] + '='}\n                    {value}\n                </Label.Detail>\n            </Label>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport FilterTag from './FilterTag'\n\nexport default class FilterTags extends Component {\n    render() {\n        const { filters, deleteFilter } = this.props\n        return (\n            <div>\n                {filters.map((filter, idx) => \n                    <FilterTag \n                        key={idx}\n                        {...filter}\n                        onClick={() => deleteFilter(filter.id)}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu, Label, Input } from 'semantic-ui-react'\n\nexport default class SearchBar extends Component {\n    render() {\n        return (\n            <Menu>\n                <Menu.Item>\n                    {/* TODO Search with dynamic selection company */}\n                    <Input icon='search' placeholder='Company' />\n                </Menu.Item>\n            </Menu>\n\n        )\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getDemoOffers } from '../actions/ApiActions'\nimport Table from '../components/Table'\nimport Charts from '../components/Charts'\nimport FilterTags from '../components/FilterTags'\nimport SearchBar from '../components/SearchBar'\nimport { Container, Divider } from 'semantic-ui-react'\nimport { removeFilter } from '../actions/FilterActions';\n\nclass App extends Component {\n    componentDidMount() {\n        const { getAllOffers } = this.props\n        getAllOffers()\n    }\n\n    render() {\n        const { offers, loading, filters, deleteFilter } = this.props\n        return (\n            <Container>\n                <Divider hidden />\n                <SearchBar />\n                <Divider hidden />\n                <FilterTags filters={filters} deleteFilter={deleteFilter} />\n                <Divider hidden />\n                <Charts offers={offers} />\n                <Divider hidden />\n                <Table offers={offers} loading={loading} />\n            </Container>\n        )\n    }\n}\n\nconst getFilteredOffers = (offers, filters) => {\n    // TODO: search with mulitiple filters/values\n    return offers.filter(offer => {\n        for (let i = 0; i < filters.length; i++) {\n            const { value, accessor } = filters[i]\n            if (value.toLowerCase() !== offer[accessor].toLowerCase()) {\n                return false\n            }\n        }\n        return true\n    })\n}\n\nconst mapStateToProps = state => {\n    const { offers, filters } = state\n    return {\n        offers: getFilteredOffers(offers.offers, filters),\n        loading: offers.loading,\n        filters\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    deleteFilter: id => dispatch(removeFilter(id)),\n    getAllOffers: () => dispatch(getDemoOffers()),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App)\n","export const ADD_FILTER = 'ADD_FILTER'\nexport const REMOVE_FILTER = 'REMOVE_FILTER'\n\n/**\n * \n * @param {dataStructure/Filter} filter \n */\nexport const addFilter = filter => ({\n    type: ADD_FILTER,\n    filter\n})\n\nexport const removeFilter = id => ({\n    type: REMOVE_FILTER,\n    id\n})\n","import { LOADING_OFFERS, RECEIVE_OFFERS } from '../actions/ApiActions'\n\nconst INITIAL_STATE = {\n    offers: [],\n    loading: {\n        isLoading: false,\n        taskCount: 0,\n    },\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    const { type } = action\n    switch (type) {\n        case LOADING_OFFERS: {\n            return {\n                ...state,\n                loading: {\n                    isLoading: true,\n                    taskCount: action.taskCount\n                }\n            }\n        }\n        case RECEIVE_OFFERS: {\n            return {\n                ...state,\n                offers: action.offers,\n                loading: {\n                    isLoading: false,\n                    taskCount: 0\n                }\n            }\n        }\n        default:\n            return state\n    }\n}\n","import { ADD_FILTER, REMOVE_FILTER } from '../actions/FilterActions'\nimport Filter from '../dataStructure/Filter'\n// TODO\nconst INITIAL_STATE = [ new Filter('company_name', 'Google') ]\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case ADD_FILTER: {\n            return [\n                ...state,\n                action.filter\n            ]\n        }\n        case REMOVE_FILTER: {\n            return state.filter(f => f.id !== action.id)\n        }\n        default:\n            return state\n    }\n}\n","export default class Filter {\n    constructor(accessor, value) {\n        this.accessor = accessor\n        this.value = value\n        this.id = Math.random().toString(36).substr(2);\n    }\n}\n","import { combineReducers } from 'redux'\nimport offers from './offers'\nimport filters from './filters'\n\nexport default combineReducers({\n    offers,\n    filters,\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './containers/App'\nimport reducer from './reducers'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}