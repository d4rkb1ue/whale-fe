{"version":3,"sources":["constants/config.js","api/get.js","actions/ApiActions.js","components/Table.js","utils/index.js","components/Chart.js","components/Charts.js","components/FilterTag.js","components/FilterTags.js","components/SearchBar.js","components/Statistics.js","dataStructure/Filter.js","containers/App.js","actions/FilterActions.js","reducers/offers.js","reducers/filters.js","reducers/index.js","serviceWorker.js","index.js"],"names":["OFFER_HEADER_CHOICES","season","key","value","text","OFFER_HEADER","Header","accessor","GENERAL_PARA","offset","limit","list_id","EMPTY_QUERY","NaN","annual_refresh","level","year","base_salary","relocation_fee","sign_bonus","post_title","satisfaction","area","degree","equity","equity_schedule","experience","experience_level","greencard","group","job_function","job_type","title","interest_point","other_offer","position_type","post_time","spider_time","promotion_package","url","yearly_bonus","apply_source","getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","res","data","wrap","_context","prev","next","axios","get","API","sent","offers","abrupt","stop","this","_x","apply","arguments","loadingOffers","taskCount","type","getDemoOffers","dispatch","length","undefined","requestOffers","obj","console","error","Number","isNaN","substring","makeQuery","objectSpread","Table","renderCustomCell","idx","findIndex","val","customURL","_this","Cell","u","react_default","createElement","Button","fluid","icon","size","onClick","window","open","maxWidth","customSeason","choice","month2season","find","s","filterMethod","filter","row","id","toLowerCase","String","indexOf","_this$props","props","loading","react_table_es","columns","isLoading","defaultPageSize","showPageSizeOptions","className","Component","offerCountBy","para","sortFunc","counter","forEach","o","p","arr","c","_arr$push","push","defineProperty","sort","labels","map","counts","count","THIS_YEAR","Date","getFullYear","START_YEAR","END_YEAR","randomURI","Math","random","toString","substr","Chart","color","header","chart","GridColumn","Card","Content","defaults","global","legend","display","Charts","_dynamicColors","n","colors","i","r","floor","g","b","makeData","datas","datasets","backgroundColor","hoverBackgroundColor","makeLineDate","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","_generateBubbles","companySalary2Count","salary","salary2Count","x","y","makeBubbleData","label","fill","makeElementListener","addFilter","e","_index","_model","_xScale","ticks","_yScale","config","companyNames","charts","_getOfferCountByCompa","getOfferCountByCompany","react_chartjs_2_es","onElementsClick","_getOfferCountByYear","recent","l","_","getOfferCountByYear","redraw","_getOfferCountByDegre","getOfferCountByDegree","options","_getOfferCountBySeaso","SEASON_ORDINAL","1-3","4-6","7-9","10-12","getOfferCountBySeason","_getOfferCountByExper","getOfferCountByExperience","_getOfferCountBySalar","company","company_name","bucketToPut","offerCountByWithCompanyName","getOfferCountBySalary","scales","xAxes","min","max","beginAtZero","stepSize","maxRotation","minRotation","callback","index","values","yAxes","tooltips","callbacks","t","d","xLabel","yLabel","datasetIndex","com","Chart_Chart","assign","ICON","sign_bonus_string","SHOW_LABEL","FilterTag","Label","Icon","name","Detail","FilterTags","filters","deleteFilter","FilterTag_FilterTag","content","SearchBar","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onResultSelect","result","setState","onSearchChange","_ref2","toLocaleLowerCase","companies","resultRenderer","_ref3","render","state","Menu","Item","Search","results","selectFirstResult","Statistics","makeStat","Statistic","Value","prettyLocation","str","ret","split","_this2","byLocation","getOfferCountByLocation","hostestLocation","stat","round","reduce","sum","cur","getAvg","clone","slice","getMid","valueType","Group","Filter","App","getAllOffers","Container","Divider","hidden","SearchBar_SearchBar","FilterTags_FilterTags","Statistics_Statistics","Charts_Charts","Table_Table","connect","filterGroup","f","offer","getFilteredOffers","getCompanies","removeFilter","INITIAL_STATE","combineReducers","action","_filters$i","isDuplicateFilter","toConsumableArray","concat","Boolean","location","hostname","match","store","createStore","reducer","applyMiddleware","thunk","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b45d4d20.chunk.js","sourcesContent":["export const API = 'http://whaleapi.drkbl.com/api/v1/'\nexport const OFFER_API = API + '/offers'\nexport const DEFAULT_OFFER_PAGESIZE = 20\nexport const OFFER_HEADER_CHOICES = {\n    'season': [\n        { key: '1-3', value: '1-3', text: 'Winter' },\n        { key: '4-6', value: '4-6', text: 'Spring' },\n        { key: '7-9', value: '7-9', text: 'Summer' },\n        { key: '10-12', value: '10-12', text: 'Fall' },\n    ]\n}\nexport const SHOW_YEAR_BEFORE = 3\nexport const SHOW_YEAR_LATER = 1\nexport const OFFER_HEADER = [\n    {\n        Header: 'Company',\n        accessor: 'company_name',\n    },\n    {\n        Header: 'Base',\n        accessor: 'base_salary',\n    },\n    {\n        Header: 'Equity',\n        accessor: 'equity',\n    },\n    {\n        Header: 'SignBonus',\n        accessor: 'sign_bonus_string',\n    },\n    {\n        Header: 'YearlyBonus',\n        accessor: 'yearly_bonus',\n    },\n    {\n        Header: 'Degree',\n        accessor: 'degree',\n    },\n    /**\n     *  BayArea\n     *  Greater Seattle Area\n     *  Greater New York Area\n     *  Greater Boston Area\n     *  Texas\n     *  Southern California\n     *  Pittsburgh\n     *  Chicago\n     *  DC\n     *  美国其他地区\n     *  Canada\n     *  欧洲\n     *  澳大利亚\n     *  北京\n     *  上海\n     *  广州\n     *  成都\n     *  沈阳\n     *  国内其他地区\n     *  亚洲其他地区\n     *  South America\n     *  Everywhere else\n     */\n    {\n        Header: 'Area',\n        accessor: 'area',\n    },\n    {\n        Header: 'Experience',\n        accessor: 'experience_level',\n    },\n    // {\n    //     Header: 'experience',\n    //     accessor: 'experience',\n    // },\n    // {\n    //     Header: 'post_time',\n    //     accessor: 'post_time',\n    // },\n    {\n        Header: 'Year',\n        accessor: 'year',\n    },\n    {\n        Header: 'Season',\n        accessor: 'season',\n    },\n    {\n        Header: 'Link',\n        accessor: 'url',\n    },\n]\n\n\n","import axios from 'axios';\nimport { OFFER_API } from '../constants/config'\n\nconst GENERAL_PARA = {\n    offset: true,\n    limit: true,\n    list_id: true,\n}\n\nexport const EMPTY_QUERY = {\n    offset: NaN,\n    limit: NaN,\n    list_id: '',\n    annual_refresh: NaN,\n    level: NaN,\n    year: NaN,\n    base_salary: NaN,\n    relocation_fee: NaN,\n    sign_bonus: NaN,\n    post_title: '',\n    satisfaction: '',\n    area: '',\n    degree: '',\n    equity: '',\n    equity_schedule: '',\n    experience: '',\n    experience_level: '',\n    greencard: '',\n    group: '',\n    job_function: '',\n    job_type: '',\n    title: '',\n    interest_point: '',\n    other_offer: '',\n    position_type: '',\n    post_time: null,\n    spider_time: null,\n    promotion_package: '',\n    season: '',\n    url: '',\n    yearly_bonus: '',\n    apply_source: '',\n}\n\nexport const makeQuery = (obj) => {\n    if (!obj) { return '' }\n    let query = '?'\n    for (let key in obj) {\n        if (!(key in EMPTY_QUERY)) {\n            console.error('invalid arg', key)\n        }\n        if (Number.isNaN(obj[key]) || !obj[key]) {\n            continue\n        }\n        if (key in GENERAL_PARA) {\n            query += (key + '=' + obj[key])\n        } else {\n            query += ('by_' + key + '=' + obj[key])\n        }\n        query += '&'\n    }\n    if (query === '?') {\n        return ''\n    }\n\n    if (query[query.length - 1] === '&') {\n        query = query.substring(0, query.length - 1)\n    }\n    \n    return query\n}\n\n/**\n * usage:\n * makeQuery({\n *     ...EMPTY_QUERY,\n *     limit: 10,\n * })\n */\n\nexport const getData = async (query) => {\n    let res = await axios.get(OFFER_API + query)\n    let data = res.data && res.data.offers\n    return data || []\n}\n","import { getData, makeQuery, EMPTY_QUERY } from '../api/get';\n\nexport const RECEIVE_OFFERS = 'recieve_offers'\nexport const LOADING_OFFERS = 'loading_offers'\n\nexport const loadingOffers = (taskCount) => ({\n    type: LOADING_OFFERS,\n    taskCount\n})\n\nexport const receiveOffers = offers => ({\n    type: RECEIVE_OFFERS,\n    offers\n})\n\nconst requestOffers = (query = '', taskCount = 10) => async (dispatch) => {\n    dispatch(loadingOffers(taskCount))\n    const offers = await getData(query)\n    dispatch({\n        type: RECEIVE_OFFERS,\n        offers\n    })\n}\n\nconst DEMO_OFFER_COUNT = 3000\nexport const getDemoOffers = () => dispatch => {\n    return dispatch(requestOffers(makeQuery({\n        ...EMPTY_QUERY,\n        limit: DEMO_OFFER_COUNT,\n    }), DEMO_OFFER_COUNT))\n}\n","import React, { Component } from 'react'\nimport ReactTable from \"react-table\"\nimport { Button } from 'semantic-ui-react'\nimport \"react-table/react-table.css\"\nimport { OFFER_HEADER, OFFER_HEADER_CHOICES, DEFAULT_OFFER_PAGESIZE } from '../constants/config'\n\nexport default class Table extends Component {\n    // use arrow function to avoid scope problem without useing .bind()\n    renderCustomCell = (accessor, obj) => {\n        let idx = OFFER_HEADER.findIndex(val => val.accessor === accessor)\n        OFFER_HEADER[idx] = {\n            ...OFFER_HEADER[idx],\n            ...obj\n        }\n    }\n\n    customURL = () => {\n        // make url as button\n        const urlBotton = url => (\n            <Button\n                fluid\n                icon='world'\n                size='mini'\n                onClick={() => window.open(url, '_blank')} />\n        )\n        const URL_BUTTON_WIDTH = 40\n        this.renderCustomCell('url', {\n            Cell: u => urlBotton(u.value),\n            maxWidth: URL_BUTTON_WIDTH\n        })\n    }\n\n    customSeason = () => {\n        // translate month value '1-12' to spring/summer/fall/winter\n        const choice = OFFER_HEADER_CHOICES['season']\n        if (!choice) { return }\n        const month2season = (value) => {\n            if (!value) { return }\n            let res = choice.find(s => s.value === value)\n            return res && res.text\n        }\n\n        const filterMethod = (filter, row) => {\n            const accessor = filter.id\n            if (!row[accessor]) {\n                return false\n            }\n            const value = filter.value.toLowerCase()\n            return String(month2season(row[accessor])).toLowerCase().indexOf(value) > -1\n        }\n        this.renderCustomCell('season', {\n            Cell: ({ value }) => month2season(value),\n            filterMethod\n        })\n    }\n\n    render() {\n        const { offers, loading } = this.props\n        this.customURL()\n        this.customSeason()\n\n        return (\n            <ReactTable\n                data={offers}\n                columns={OFFER_HEADER}\n                loading={loading.isLoading}\n                defaultPageSize={DEFAULT_OFFER_PAGESIZE}\n                showPageSizeOptions={false}\n                className=\"-striped -highlight\"\n            />\n        )\n    }\n}\n","import { SHOW_YEAR_BEFORE, SHOW_YEAR_LATER, OFFER_HEADER_CHOICES } from '../constants/config'\nfunction offerCountBy (offers, para, sortFunc) {\n    let counter = {}\n    offers.forEach(o => {\n        let p = o[para]\n        if(!p) { return }\n        counter[p] = counter[p] || 0\n        counter[p]++\n    })\n    let arr = []\n    for (const c in counter) {\n        arr.push({\n            [para]: c,\n            count: counter[c]\n        })\n    }\n    if (sortFunc) {\n        arr.sort(sortFunc)\n    }\n\n    return {\n        labels: arr.map(obj => obj[para]),\n        counts: arr.map(obj => obj.count)\n    }\n}\n\n// Company name is unique\nfunction offerCountByWithCompanyName (offers, para, sortFunc) {\n    let counter = {} // Map<company_name, Map<salary, count>>\n    offers.forEach(o => {\n        let c = o['company_name']\n        let p = o[para]\n        if(!p) { return }\n        counter[c] = counter[c] || {}\n        counter[c][p] = counter[c][p] || 0\n        counter[c][p]++\n    })\n    let arr = []\n    for (const company in counter) {\n        arr.push({\n            company_name: company,\n            salary2Count: {}\n        })\n        for (const salary in counter[company]) {\n            // put all the salaries in range buckets\n            let bucketToPut = 190000;\n            if (salary < 70000) {\n                bucketToPut = 70000\n            } else if (salary < 80000) {\n                bucketToPut = 80000\n            } else if (salary < 90000) {\n                bucketToPut = 90000\n            } else if (salary < 100000) {\n                bucketToPut = 100000\n            } else if (salary < 110000) {\n                bucketToPut = 110000\n            } else if (salary < 120000) {\n                bucketToPut = 120000\n            } else if (salary < 130000) {\n                bucketToPut = 130000\n            } else if (salary < 140000) {\n                bucketToPut = 140000\n            } else if (salary < 150000) {\n                bucketToPut = 150000\n            } else if (salary < 160000) {\n                bucketToPut = 160000\n            } else if (salary < 170000) {\n                bucketToPut = 170000\n            } else if (salary < 180000) {\n                bucketToPut = 180000\n            } else {\n                bucketToPut = 190000\n            }\n            arr[arr.length - 1].salary2Count[bucketToPut] = arr[arr.length - 1].salary2Count[bucketToPut] || 0\n            arr[arr.length - 1].salary2Count[bucketToPut] += counter[company][salary]\n        }\n    }\n\n    if (sortFunc) {\n        arr.sort(sortFunc)\n    }\n\n    return {\n        companyNames: arr.map(obj => obj['company_name']),\n        companySalary2Count: arr\n    }\n}\n\n\nconst THIS_YEAR = (new Date()).getFullYear()\nconst START_YEAR = THIS_YEAR - SHOW_YEAR_BEFORE\nconst END_YEAR = THIS_YEAR + SHOW_YEAR_LATER\n\nexport function getAvg(offers) {\n    const ret = offers.reduce((sum, cur) => (cur['base_salary'] || 0) + sum, 0) / offers.length;\n    return ret || 0\n}\n\nexport function getMid(offers) {\n    if (!offers || !offers.length) { return 0 }\n    let clone = offers.slice()\n    clone.sort((a, b) => a['base_salary'] - b['base_salary'])\n    return clone[Math.floor(clone.length / 2)]['base_salary']\n}\n\nexport function getOfferCountByLocation(offers) {\n    return offerCountBy(offers, 'area', (a, b) => b.count - a.count)\n}\n\nexport function randomURI() {\n    return Math.random().toString(36).substr(2);\n}\n\nexport function getOfferCountByYear(offers) {\n    let res = offerCountBy(offers, 'year', (a, b) => a.year - b.year)\n    // show only recent years\n    let recent = {}\n    for (let i = START_YEAR; i <= END_YEAR; i++) {\n        recent[i] = true\n    }\n    res = {\n        labels: res.labels.filter(l => recent[l]),\n        counts: res.counts.filter((_, idx) => recent[res.labels[idx]])\n    }\n    return res\n}\n\nexport function getOfferCountByCompany(offers) {\n    return offerCountBy(offers, 'company_name', (a, b) => b.count - a.count)\n}\n\nexport function getOfferCountByDegree(offers) {\n    return offerCountBy(offers, 'degree', (a, b) => b.count - a.count)\n}\n\nexport function getOfferCountBySeason(offers) {\n    const choice = OFFER_HEADER_CHOICES['season']\n        if (!choice) { return }\n    const month2season = (value) => {\n        if (!value) { return }\n        let res = choice.find(s => s.value === value)\n        return res && res.text\n    }\n    const SEASON_ORDINAL = {\n        \"1-3\": 3,\n        \"4-6\": 0,\n        \"7-9\": 1,\n        \"10-12\": 2\n    }\n    let res = offerCountBy(offers, 'season', (a, b) => SEASON_ORDINAL[a.season] - SEASON_ORDINAL[b.season])\n    for (let i = 0; i < res.labels.length; i++) {\n        res.labels[i] = month2season(res.labels[i]);\n    }\n    return res;\n}\n\nexport function getOfferCountByExperience(offers) {\n    return offerCountBy(offers, 'experience_level', (a, b) => b.count - a.count)\n}\n\nexport function getOfferCountBySalary(offers) {\n    return offerCountByWithCompanyName(offers, 'base_salary', (a, b) => b.company_name - a.company_name) // alphabetical order on company name \n}\n\nexport function getCompanies(offers) {\n    let map = {}\n    offers.forEach(o => {\n        map[o['company_name']] = 1\n    })\n    let ret = []\n    for (let i in map) {\n        ret.push(i)\n    }\n    return ret\n}\n","import React, { Component } from 'react'\nimport { GridColumn, Card } from 'semantic-ui-react'\n\nexport default class Chart extends Component {\n    render() {\n        const { color, header, chart } = this.props\n        return (\n            <GridColumn>\n                <Card fluid color={color}>\n                    <Card.Content header={header} />\n                    {chart}\n                </Card>\n            </GridColumn>\n        )\n    }\n\n}\n","import React, { Component } from 'react'\nimport { defaults, Bar, Pie, Line, Polar, HorizontalBar, Bubble } from 'react-chartjs-2'\nimport { \n    getOfferCountByYear, \n    getOfferCountByCompany, \n    getOfferCountByDegree,\n    getOfferCountBySeason,\n    getOfferCountByExperience, \n    getOfferCountBySalary } from \"../utils\";\nimport Chart from './Chart'\n\ndefaults.global.legend.display = false\n// defaults.global.redraw = true\n\nexport default class Charts extends Component {\n\n    // chartjs2 does not support automatically assigning different colors to different portions of the chart.\n    // this function is for dynamically generating different colors for different portions on the chart.\n    _dynamicColors = (n) => {\n        let colors = [];\n        for (let i = 0; i < n; i++) {\n            var r = Math.floor(Math.random() * 255);\n            var g = Math.floor(Math.random() * 255);\n            var b = Math.floor(Math.random() * 255);\n            colors.push(\"rgba(\" + r + \",\" + g + \",\" + b + \", 0.6)\");\n        }\n        return colors;\n    };\n\n    makeData = (labels, datas) => ({\n        labels,\n        datasets: [{\n            data: datas[0],\n            backgroundColor: this._dynamicColors(datas[0].length),\n            hoverBackgroundColor: this._dynamicColors(datas[0].length),\n        }]\n    })\n\n    // <Line /> does not require array of colors.\n    makeLineDate = (labels, datas) => ({\n        labels,\n        datasets: [{\n            data: datas[0],\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n        }]\n    })\n\n    _generateBubbles = (companySalary2Count) => {\n        let res = []\n        for (let i = 0; i < companySalary2Count.length; i++) {\n            for (const salary in companySalary2Count[i].salary2Count) {\n                res.push({\n                    x: i,\n                    y: salary,\n                    r: (companySalary2Count[i].salary2Count[salary] / 5)\n                })\n            }\n        }\n        return res;\n    }\n\n    makeBubbleData = (companySalary2Count) => ({\n        labels: ['January', 'ad'],\n        datasets: [{\n            label: \"\",\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: this._generateBubbles(companySalary2Count)\n        }]\n    })\n\n    makeElementListener = accessor => {\n        const { addFilter } = this.props\n        if (accessor === 'season') {\n            return (e) => {\n                e = e[0]\n                if (!e || !e._index) {\n                    return\n                }\n                if (e._index === 0) { e._model.label = '4-6' }\n                else if (e._index === 1) { e._model.label = '7-9' }\n                else if (e._index === 2) { e._model.label = '10-12' }\n                else if (e._index === 3) { e._model.label = '1-3' }\n                addFilter(accessor, e._model.label)\n            }\n        }\n        if (accessor === 'base_salary') {\n            return (e) => {\n                e = e[0]\n                if (!e || !e._index || !e._xScale || !e._xScale.ticks) {\n                    return\n                }\n                addFilter(accessor, e._xScale.ticks[e._index])\n            }\n        }\n        if (accessor === 'bubble_base_salary') {\n            return (e) => {\n                e = e[0]\n                if (!e || !e._index || !e._xScale || !e._xScale.ticks) {\n                    return\n                }\n                addFilter('base_salary', e._yScale.chart.config.data.datasets[0].data[e._index].y)\n            }\n        }\n        return (e) => {\n            // only take first element\n            e = e[0]\n            if (!e || !e._model || !e._model.label) {\n                return\n            }\n            addFilter(accessor, e._model.label)\n        }\n    }\n\n    render() {\n        const { offers } = this.props\n        const charts = []\n        let labels, counts, companyNames, chart, onClick;\n\n        // make offer by company Pie chart\n        ({ labels, counts } = getOfferCountByCompany(offers));\n        onClick = this.makeElementListener('company_name')\n        chart = <Pie data={this.makeData(labels, [counts])} onElementsClick={onClick} />\n        charts.push({\n            color: 'blue',\n            header: 'by Companies',\n            chart,\n        });\n\n        // make offer by year Bar chart\n        ({ labels, counts } = getOfferCountByYear(offers));\n        onClick = this.makeElementListener('year')\n        // redraw is necessary for <Line /> to animate once loaded\n        chart = <Bar data={this.makeData(labels, [counts])} redraw={true} onElementsClick={onClick} />\n        charts.push({\n            color: 'red',\n            header: 'by Year',\n            chart,\n        });\n\n        // make offer by degree Donut chart\n        ({ labels, counts } = getOfferCountByDegree(offers));\n        onClick = this.makeElementListener('degree')\n        chart = <Polar data={this.makeData(labels, [counts])} redraw={true} onElementsClick={onClick} options={{legend: { display: true }}} />\n        charts.push({\n            color: 'yellow',\n            header: 'by Degree',\n            chart,\n        });\n\n        // make offer by season Line chart\n        ({ labels, counts } = getOfferCountBySeason(offers));\n        onClick = this.makeElementListener('season')\n        chart = <Line data={this.makeLineDate(labels, [counts])} redraw={true} onElementsClick={onClick} />\n        charts.push({\n            color: 'orange',\n            header: 'by Season',\n            chart,\n        });\n\n        // make offer by experience chart\n        ({ labels, counts } = getOfferCountByExperience(offers));\n        onClick = this.makeElementListener('experience_level')\n        chart = <HorizontalBar data={this.makeData(labels, [counts])} redraw={true} onElementsClick={onClick} />\n        charts.push({\n            color: 'purple',\n            header: 'by Experience',\n            chart,\n        });\n\n        // make offer by salary Line chart\n        let companySalary2Count;\n        ({ companySalary2Count, companyNames } = getOfferCountBySalary(offers));\n        onClick = this.makeElementListener('bubble_base_salary')\n        chart = <Bubble \n                    data={this.makeBubbleData(companySalary2Count)} \n                    redraw={true} \n                    onElementsClick={onClick} \n                    options={{\n                        scales: {\n                            xAxes: [{\n                                ticks: {\n                                    min: -1,\n                                    max: companyNames.length,\n                                    beginAtZero: true,\n                                    stepSize: 1,\n                                    maxRotation: 80,\n                                    minRotation: 80,\n                                    callback: function(value, index, values) {\n                                        if (index === 0) {\n                                            return \"\"\n                                        }\n                                        return companyNames[index - 1];\n                                    }\n                                }\n                            }],\n                            yAxes: [\n                                {\n                                    ticks: {\n                                        callback: function(label, index, labels) {\n                                            return label/1000+'k';\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        tooltips: {\n                            callbacks: {\n                               label: function(t, d) {\n                                    return companyNames[t.xLabel] + ' - $' + t.yLabel + ' - ' + d.datasets[t.datasetIndex].data[t.index].r * 5; \n                                    // 'r' is the radius, * 5 to get the real count\n                               }\n                            }\n                         }\n                    }}\n                />\n        charts.push({\n            color: 'green',\n            header: 'by Salary',\n            chart,\n        });\n\n        return (\n            <div className=\"ui three column doubling grid\">\n                {charts.map((com, idx) => (\n                    <Chart\n                        key={idx}\n                        {...com}\n                    />\n                ))}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Icon, Label } from 'semantic-ui-react'\n\nconst ICON = {\n    'company_name': 'briefcase',\n    'base_salary': 'dollar sign',\n    'equity': 'money bill alternate',\n    'sign_bonus_string': 'handshake',\n    'yearly_bonus': 'money bill alternate outline',\n    'degree': 'graduation cap',\n    'area': 'map marker',\n    'experience_level': 'trophy',\n    'year': 'calendar',\n    'season': 'calendar alternate outline',\n}\n\nconst SHOW_LABEL = {\n    'equity': 'Equity',\n    'sign_bonus_string': 'SignOn',\n    'yearly_bonus': 'Yearly',\n}\n\nexport default class FilterTag extends Component {\n    render() {\n        let { accessor, value, onClick } = this.props\n        if (accessor === 'season') {\n            let season = '';\n            switch (value) {\n                case '4-6':\n                    season = 'Spring';\n                    break;\n                case '7-9':\n                    season = 'Summer';\n                    break;\n                case '10-12':\n                    season = 'Fall';\n                    break;\n                case '1-3':\n                    season = 'Winter';\n                    break;\n                default:\n                    break;\n            }\n            value = season\n        }\n        return (\n            <Label>\n                { typeof(onClick) !== 'undefined' && <Icon name='delete' onClick={onClick} />}\n                <Label.Detail>\n                    <Icon name={ICON[accessor] || 'circle outline'} />\n                    {SHOW_LABEL[accessor] && SHOW_LABEL[accessor] + '='}\n                    {value}\n                </Label.Detail>\n            </Label>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport FilterTag from './FilterTag'\nimport { Label } from 'semantic-ui-react'\n\nexport default class FilterTags extends Component {\n    render() {\n        const { filters, deleteFilter } = this.props\n        return filters.length ? (\n            <div>\n                {filters.map((filter, idx) => \n                    <FilterTag \n                        key={idx}\n                        {...filter}\n                        onClick={() => deleteFilter(filter.id)}\n                    />\n                )}\n            </div>\n        ) : <Label icon='circle' content='all' />\n    }\n}\n","import React, { Component } from 'react'\nimport { Menu, Search } from 'semantic-ui-react'\nimport FilterTag from './FilterTag'\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: '',\n            result: [],\n        }\n    }\n\n    onResultSelect = (e, { result }) => {\n        const { addFilter } = this.props\n        this.setState({\n            value: '',\n        })\n        addFilter('company_name', result.title)\n    }\n\n    onSearchChange = (e, { value }) => {\n        this.setState({ value })\n        value = value.toLocaleLowerCase()\n        let companies = this.props.companies.filter(com => com.toLocaleLowerCase().indexOf(value) > -1)\n        this.setState({\n            result: companies.map(title => ({ title })),\n        })\n    }\n\n    resultRenderer = ({title}) => {\n        const tag = new FilterTag({\n            accessor: 'company_name',\n            value: title,\n        })\n        return tag.render()\n    }\n\n    render() {\n        return (\n            <Menu>\n                <Menu.Item>\n                    <Search\n                        value={this.state.value}\n                        onResultSelect={this.onResultSelect}\n                        onSearchChange={this.onSearchChange}\n                        results={this.state.result}\n                        resultRenderer={this.resultRenderer}\n                        selectFirstResult={true}\n                    />\n                </Menu.Item>\n            </Menu>\n\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Statistic } from 'semantic-ui-react'\nimport { getAvg, getMid, getOfferCountByLocation } from '../utils'\nimport { randomURI } from '../utils'\n\nexport default class Statistics extends Component {\n    makeStat = (value, label, key, text) => (\n        <Statistic key={key}>\n            <Statistic.Value text={text}>{value}</Statistic.Value>\n            <Statistic.Label>{label}</Statistic.Label>\n        </Statistic>\n    )\n    \n    prettyLocation = str => {\n        if (str === 'BayArea') {\n            str = 'Bay Area'\n        }\n        if (str.indexOf(' ') > -1) {\n            str = str.split(' ')\n            let ret = [str[0]]\n            for (let i = 1; i < str.length; i++) {\n                ret.push(<br key={randomURI()}/>, str[i])\n            }\n            return ret\n        }\n        return str\n    }\n\n    render() {\n        const { offers } = this.props\n        const byLocation = getOfferCountByLocation(offers)\n        const hostestLocation = (byLocation.labels && byLocation.labels.length && this.prettyLocation(byLocation.labels[0]))\n        const stat = [\n            {\n                value: offers.length,\n                label: 'Offers'\n            },\n            {\n                value: Math.round(getAvg(offers)/1000) + 'k',\n                label: 'Average Base'\n            },\n            {\n                value: Math.round(getMid(offers)/1000) + 'k',\n                label: 'Median Base'\n            },\n            {\n                value: hostestLocation || 'None',\n                valueType: 'text',\n                label: 'Hottest Location'\n            },\n        ]\n        \n        return (\n            <div>\n                <Statistic.Group>\n                    {stat.map((s, idx) => this.makeStat(s.value, s.label, idx, s.valueType === 'text'))}\n                </Statistic.Group>\n            </div>\n        )\n    }\n}\n","import { randomURI } from '../utils'\n\nexport default class Filter {\n    constructor(accessor, value) {\n        this.accessor = accessor\n        this.value = String(value).toLocaleLowerCase()\n        this.id = randomURI()\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getDemoOffers } from '../actions/ApiActions'\nimport Table from '../components/Table'\nimport Charts from '../components/Charts'\nimport FilterTags from '../components/FilterTags'\nimport SearchBar from '../components/SearchBar'\nimport Statistics from '../components/Statistics'\nimport { Container, Divider } from 'semantic-ui-react'\nimport { addFilter, removeFilter } from '../actions/FilterActions'\nimport Filter from '../dataStructure/Filter'\nimport { getCompanies } from '../utils'\n\nclass App extends Component {\n    componentDidMount() {\n        const { getAllOffers } = this.props\n        getAllOffers()\n    }\n\n    render() {\n        const { offers, companies, loading, filters, addFilter, deleteFilter } = this.props\n        return (\n            <Container>\n                <Divider hidden />\n                <SearchBar companies={companies} addFilter={addFilter} />\n                <Divider hidden />\n                <FilterTags filters={filters} deleteFilter={deleteFilter} />\n                <Divider hidden />\n                <Statistics offers={offers} />\n                <Divider hidden />\n                <Charts offers={offers} addFilter={addFilter} />\n                <Divider hidden />\n                <Table offers={offers} loading={loading} />\n            </Container>\n        )\n    }\n}\n\nconst getFilteredOffers = (offers, filters) => {\n    let filterGroup = {}\n    filters.forEach(f => {\n        const { value, accessor } = f\n        filterGroup[accessor] = filterGroup[accessor] || {}\n        filterGroup[accessor][value] = 1\n    })\n    \n    return offers.filter(offer => {\n        for (let accessor in filterGroup) {\n            const value = String(offer[accessor]).toLowerCase()\n            if (value in filterGroup[accessor]) {\n                continue\n            } else {\n                return false\n            }\n        }\n        return true\n    })\n}\n\nconst mapStateToProps = state => {\n    const { offers, filters } = state\n    return {\n        offers: getFilteredOffers(offers.offers, filters),\n        loading: offers.loading,\n        filters,\n        companies: getCompanies(offers.offers),\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    deleteFilter: id => dispatch(removeFilter(id)),\n    getAllOffers: () => dispatch(getDemoOffers()),\n    addFilter: (accessor, value) => dispatch(addFilter(new Filter(accessor, value))),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App)\n","export const ADD_FILTER = 'ADD_FILTER'\nexport const REMOVE_FILTER = 'REMOVE_FILTER'\n\n/**\n * \n * @param {dataStructure/Filter} filter \n */\nexport const addFilter = filter => ({\n    type: ADD_FILTER,\n    filter\n})\n\nexport const removeFilter = id => ({\n    type: REMOVE_FILTER,\n    id\n})\n","import { LOADING_OFFERS, RECEIVE_OFFERS } from '../actions/ApiActions'\n\nconst INITIAL_STATE = {\n    offers: [],\n    loading: {\n        isLoading: false,\n        taskCount: 0,\n    },\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    const { type } = action\n    switch (type) {\n        case LOADING_OFFERS: {\n            return {\n                ...state,\n                loading: {\n                    isLoading: true,\n                    taskCount: action.taskCount\n                }\n            }\n        }\n        case RECEIVE_OFFERS: {\n            return {\n                ...state,\n                offers: action.offers,\n                loading: {\n                    isLoading: false,\n                    taskCount: 0\n                }\n            }\n        }\n        default:\n            return state\n    }\n}\n","import { ADD_FILTER, REMOVE_FILTER } from '../actions/FilterActions'\n\n// import Filter from '../dataStructure/Filter'\n// const INITIAL_STATE = [ new Filter('company_name', 'Google'), new Filter('company_name', 'Amazon') ]\nconst INITIAL_STATE = []\n\nexport default function (state = INITIAL_STATE, action) {\n    function isDuplicateFilter(filters, filter) {\n        for (let i = 0; i < filters.length; i++) {\n            const { accessor, value } = filters[i]\n            if (accessor === filter.accessor && value === filter.value) {\n                return true\n            }\n        }\n    }\n\n    switch (action.type) {\n        case ADD_FILTER: {\n            if (isDuplicateFilter(state, action.filter)) {\n                return state\n            }\n            return [\n                ...state,\n                action.filter\n            ]\n        }\n        case REMOVE_FILTER: {\n            return state.filter(f => f.id !== action.id)\n        }\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport offers from './offers'\nimport filters from './filters'\n\nexport default combineReducers({\n    offers,\n    filters,\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './containers/App'\nimport reducer from './reducers'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}